dem.tab <- DemJoin %>%
mutate(gender = recode(gender, "0" = "Female", "1" = "Male"),
ethnicity = recode(ethnicity, "0" = "Hispanic/Latino", "1" = "Not Hispanic/Latino"),
medication_history = recode(medication_history, "0" = "No", "1" = "Yes"),
psychiatric_condition = recode(psychiatric_condition, "0" = "No", "1" = "Yes"),
smoke_current = recode(smoke_current, "0" = "No", "1" = "Yes"),
alcohol_current = recode(alcohol_current, "0" = "No", "1" = "Yes"),
drugs_current = recode(drugs_current, "0" = "No", "1" = "Yes"),
name=ifelse(race == "0",NA,name)) >%>
select(-c(race))
dem.tab <- DemJoin %>%
mutate(gender = recode(gender, "0" = "Female", "1" = "Male"),
ethnicity = recode(ethnicity, "0" = "Hispanic/Latino", "1" = "Not Hispanic/Latino"),
medication_history = recode(medication_history, "0" = "No", "1" = "Yes"),
psychiatric_condition = recode(psychiatric_condition, "0" = "No", "1" = "Yes"),
smoke_current = recode(smoke_current, "0" = "No", "1" = "Yes"),
alcohol_current = recode(alcohol_current, "0" = "No", "1" = "Yes"),
drugs_current = recode(drugs_current, "0" = "No", "1" = "Yes"),
name=ifelse(race == "0",NA,name)) >%>
select(-race)
dem.tab <- DemJoin %>%
mutate(gender = recode(gender, "0" = "Female", "1" = "Male"),
ethnicity = recode(ethnicity, "0" = "Hispanic/Latino", "1" = "Not Hispanic/Latino"),
medication_history = recode(medication_history, "0" = "No", "1" = "Yes"),
psychiatric_condition = recode(psychiatric_condition, "0" = "No", "1" = "Yes"),
smoke_current = recode(smoke_current, "0" = "No", "1" = "Yes"),
alcohol_current = recode(alcohol_current, "0" = "No", "1" = "Yes"),
drugs_current = recode(drugs_current, "0" = "No", "1" = "Yes"),
name=ifelse(race == "0",NA,name)) %>%
select(-race)
dem.tab %>% View()
dem.tab <- DemJoin %>%
mutate(gender = recode(gender, "0" = "Female", "1" = "Male"),
ethnicity = recode(ethnicity, "0" = "Hispanic/Latino", "1" = "Not Hispanic/Latino"),
medication_history = recode(medication_history, "0" = "No", "1" = "Yes"),
psychiatric_condition = recode(psychiatric_condition, "0" = "No", "1" = "Yes"),
smoke_current = recode(smoke_current, "0" = "No", "1" = "Yes"),
alcohol_current = recode(alcohol_current, "0" = "No", "1" = "Yes"),
drugs_current = recode(drugs_current, "0" = "No", "1" = "Yes"),
name=ifelse(race == "0",NA,name)) %>%
select(-race) %>%
rename(name = race)
dem.tab %>% View()
dem.tab <- DemJoin %>%
mutate(gender = recode(gender, "0" = "Female", "1" = "Male"),
ethnicity = recode(ethnicity, "0" = "Hispanic/Latino", "1" = "Not Hispanic/Latino"),
medication_history = recode(medication_history, "0" = "No", "1" = "Yes"),
psychiatric_condition = recode(psychiatric_condition, "0" = "No", "1" = "Yes"),
smoke_current = recode(smoke_current, "0" = "No", "1" = "Yes"),
alcohol_current = recode(alcohol_current, "0" = "No", "1" = "Yes"),
drugs_current = recode(drugs_current, "0" = "No", "1" = "Yes"),
name=ifelse(race == "0",NA,name)) %>%
select(-race) %>%
rename(race = name)
dem.tab %>% View()
tab <- table(dem.tab$gender:dem.tab$race)
tab <- table(dem.tab$gender:dem.tab$race)
tab %>% View()
tab <- table(dem.tab$gender:dem.tab$race)
tab %>% View()
tab <- table(dem.tab$gender:dem.tab$race)
tab <- table(dem.tab$gender, dem.tab$race)
tab %>% View()
tab <- table(dem.tab$gender | dem.tab$race)
tab <- table(dem.tab$gender|dem.tab$race)
tab <- table(dem.tab$gender & dem.tab$race)
summarize(dem.tab, na.rm = TRUE)
dem.tab %>% View()
summary(dem.tab, na.rm = TRUE)
summary(dem.tab, na.rm = TRUE) %>%
count = n()
summary(dem.tab, na.rm = TRUE),
count = n() %>%
summary(dem.tab, na.rm = TRUE),
count = n()
table(dem.tab$gender)
table(dem.tab$gender:dem.tab$race)
table(dem.tab$gender,dem.tab$race)
summarise_all(dem.tab)
dem.tab %>%
summarise_if(is.numeric, mean, na.rm = TRUE)
str(dem.tab)
dem.tab %>%
summarise_at(vars(gender:race), na.rm = TRUE)
dem.tab %>%
summarise_at(vars(gender:race), count, na.rm = TRUE)
dem.tab %>%
summarise_at(vars(gender:race), na.rm = TRUE) %>%
group_by(race)
??summarise_at
starwars %>%
summarise_at(c("gender", "race"), mean, na.rm = TRUE)
dem.tab %>%
summarise_at(c("gender", "race"), mean, na.rm = TRUE)
dem.tab %>%
summarise_at(c("gender", "race"), count, na.rm = TRUE)
dem.tab %>%
summarise_at(c("gender", "race"), count=n(), na.rm = TRUE)
dem.tab %>%
summarise_at(c("gender", "race"), na.rm = TRUE)
dem.tab %>%
summarise_at(c("gender", "race"), .funs, na.rm = TRUE)
dem.tab %>%
summarise_at(c("gender", "race"), sum, na.rm = TRUE)
dem.tab %>%
sum("gender", "race")
dem.tab %>%
count("gender", "race")
dem.tab %>%
count("gender")
table(dem.tab$everything)
table(dem.tab$gender)
??summarize_all
summarise_all(dem.tab)
summarise_all(dem.tab(min,max))
summarise_all(list(min,max))
ah <- dem.tab %>%
summarise_all(list(min,max))
ah
ah <- dem.tab %>%
summarise_if(is.character, min, max, na.rm = TRUE)
??count
dem.tab %>%
count(gender, race)
dem.tab %>%
count(gender)
stargazer(dem.tab,
digits=2,
title="Descriptive Statistics",
type = "html",
out="star_descriptive_2.doc")
install.packages("stargazer")
library(stargazer)
stargazer(dem.tab,
digits=2,
title="Descriptive Statistics",
type = "html",
out="star_descriptive_2.doc")
stargazer(dem.tab, type = "html", title = "Test", out = star.doc")
stargazer(dem.tab, type = "html", title = "Test", out = "star.doc")
stargazer(dem.tab, type = "html", title = "Test", out = "star.doc")
stargazer(dem.tab, type = "html", summary.stat = c("n"))
stargazer(dem.tab, type = "html", title = "Test", out = "star.doc")
stargazer(dem.tab, type = "html", summary.stat = c("n"), out = "star.doc")
stargazer(dem.tab, type = "html", title = "Test", out = "star.doc")
stargazer(dem.tab, type = "html")
stargazer(attitude)
stargazer(as.data.frame, dem.tab, type = "html", title = "Test", out = "star.doc")
stargazer(as.data.frame, dem.tab, type = "html")
stargazer(as.data.frame(dem.tab), type = "html")
stargazer(as.data.frame(dem.tab), type = "html", out = "star.doc")
library(xtable)
data(dem.tab)
xtable(tli[1:10, ])
data(dem.tab)
xtable(dem.tab[1:10, ])
ah <-data(dem.tab) %>%
xtable(dem.tab[1:10, ])
ah <-data(dem.tab)
xtable(dem.tab[1:10, ])
ah %>% View()
xtable(summary(dem.tab))
ah <- xtable(dem.tab[1:10, ])
print(ah, include.rownames = FALSE, booktabs = TRUE)
ah <- xtable(dem.tab[1:10, ])
print(ah, include.rownames = FALSE, booktabs = TRUE)
ah <- xtable(dem.tab[1:10, ])
print(ah, include.rownames = FALSE, booktabs = TRUE, file = getOption("xtable.file", "ah.doc"))
ah <- xtable(dem.tab[1:10, ])
print(ah, include.rownames = FALSE, booktabs = TRUE, file = getOption("xtable.file", "ah.html"))
#Load Packages
library(tidyverse)
library(tidymodels)
library(fs)
library(vip)
library(caret)
library(iapsr)
library(janitor)
library(dplyr)
#Join table with the 47 subjects we used for the 2018 cohort. This gets rid of extra subjects we did not include for the old cohort.
finalData <- full_join(positiveRatings, negativeRatings, by = c("IAPS", "subject", "form")) %>%
select(-c(order.x, order.y)) %>%
full_join(keyIAPS, by = c("IAPS", "form")) %>%
full_join(tidyDems, by = "subject") %>%
drop_na() %>%
select(subject, age, gender,
form, IAPS, desc,
positive, negative, everything())
finalData2 <- finalData %>%
select(-c(age:dom1sd)) %>%
distinct()
#Load Packages
library(tidyverse)
library(tidymodels)
library(fs)
library(vip)
library(caret)
library(janitor)
library(dplyr)
library(iapsr) #our package, woohoo!
#Read raw demographic data for 2018 SFA cohort.
Dems <-read_csv(file = "C:/Users/rachjone/Desktop/IAPS/SFA_demographics.csv")
#Filter data for wanted demographic variables.
tidyDems2 <- Dems %>%
clean_names %>%
select(participant_id, gender, ethnicity, race_1:race_6, age, medication_history, psychiatric_condition, condition_description, smoke_current, alcohol_current, drugs_current) %>%
pivot_longer(cols = c(race_1:race_6), values_to = "race") %>%
rename(subject = participant_id) %>%
mutate(name = recode(name, race_1 = "asian", race_2 = "NHPI", race_3 = "AIAN", race_4 = "black", race_5 = "white", race_6 = "other"),
ethnicity = recode(ethnicity, "1" = "0", "2" = "1"),
gender = recode(gender, "1" = "0", "2" = "1"),
subject = str_replace(subject, "\\-", "\\_")) %>%
filter(race == "1" | subject == "SFA_1034" | subject == "SFA_1039" | subject == "SFA_1049" | subject == "SFA_1071") %>%
distinct (subject, race, .keep_all = TRUE)
#Join table with the 47 subjects we used for the 2018 cohort. This gets rid of extra subjects we did not include for the old cohort.
finalData <- full_join(positiveRatings, negativeRatings, by = c("IAPS", "subject", "form")) %>%
select(-c(order.x, order.y)) %>%
full_join(keyIAPS, by = c("IAPS", "form")) %>%
full_join(tidyDems, by = "subject") %>%
drop_na() %>%
select(subject, age, gender,
form, IAPS, desc,
positive, negative, everything())
finalData2 <- finalData %>%
select(-c(age:dom1sd)) %>%
distinct()
DemJoin <- right_join(tidyDems2, finalData2, by = "subject")
DemJoin$gender <- as.numeric(DemJoin$gender)
DemJoin$ethnicity <- as.numeric(DemJoin$ethnicity)
#Create output table.
dem.tab <- DemJoin %>%
mutate(gender = recode(gender, "0" = "Female", "1" = "Male"),
ethnicity = recode(ethnicity, "0" = "Hispanic/Latino", "1" = "Not Hispanic/Latino"),
medication_history = recode(medication_history, "0" = "No", "1" = "Yes"),
psychiatric_condition = recode(psychiatric_condition, "0" = "No", "1" = "Yes"),
smoke_current = recode(smoke_current, "0" = "No", "1" = "Yes"),
alcohol_current = recode(alcohol_current, "0" = "No", "1" = "Yes"),
drugs_current = recode(drugs_current, "0" = "No", "1" = "Yes"),
name=ifelse(race == "0",NA,name)) %>%
select(-race) %>%
rename(race = name)
ah <- xtable(dem.tab[1:10, ])
print(ah, include.rownames = FALSE, booktabs = TRUE, type = "html")
#Load Packages
library(tidyverse)
library(tidymodels)
library(fs)
library(vip)
library(caret)
library(janitor)
library(dplyr)
library(iapsr) #our package, woohoo!
#Read raw demographic data for 2018 SFA cohort.
Dems <-read_csv(file = "C:/Users/rachjone/Desktop/IAPS/SFA_demographics.csv")
#Filter data for wanted demographic variables.
tidyDems2 <- Dems %>%
clean_names %>%
select(participant_id, gender, ethnicity, race_1:race_6, age, medication_history, psychiatric_condition, condition_description, smoke_current, alcohol_current, drugs_current) %>%
pivot_longer(cols = c(race_1:race_6), values_to = "race") %>%
rename(subject = participant_id) %>%
mutate(name = recode(name, race_1 = "asian", race_2 = "NHPI", race_3 = "AIAN", race_4 = "black", race_5 = "white", race_6 = "other"),
ethnicity = recode(ethnicity, "1" = "0", "2" = "1"),
gender = recode(gender, "1" = "0", "2" = "1"),
subject = str_replace(subject, "\\-", "\\_")) %>%
filter(race == "1" | subject == "SFA_1034" | subject == "SFA_1039" | subject == "SFA_1049" | subject == "SFA_1071") %>%
distinct (subject, race, .keep_all = TRUE)
#Join table with the 47 subjects we used for the 2018 cohort. This gets rid of extra subjects we did not include for the old cohort.
finalData2 <- finalData %>%
select(-c(age:dom1sd)) %>%
distinct()
library(knitr)
#Load Packages
library(tidyverse)
library(tidymodels)
library(fs)
library(vip)
library(caret)
library(janitor)
library(dplyr)
library(xtable)
library(knitr)
library(iapsr) #our package, woohoo!
dirIAPS <- '~/Desktop/IAPS/IAPSdata/' #set the directory for IAPS data
dirData <- '~/Desktop/IAPS/Subject Data/' #set the directory for subject data
dirImageOrder <- '~/Desktop/IAPS/Subject Image Order/' #set the directory for image order
dirRatings <- '~/Desktop/IAPS/RJT/ratings/' #for new cohort
fileRatings <- dir_ls(dirRatings, glob = "*.txt.txt") #get the paths for the files that contain the string ".txt.txt". For new cohort.
filesIAPS <- dir_ls(dirIAPS) #list the files in the IAPS directory
filesData <- dir_ls(dirData) #list the files in the subject data directory
filesImageOrder <- dir_ls(dirImageOrder) #list the files in the image order directory
kable(dem.tab[1:10, ], type = "latex", caption = "A knitr table") %>%
kable_styling(latex_options = "striped", "scale_down"))
kable(dem.tab[1:10, ], type = "latex", caption = "A knitr table") %>%
kable_styling(latex_options = "striped", "scale_down")
library(kableExtra)
install.packages("kableExtra")
library(kableExtra)
library(pwr)
install.packages("pwr")
library(pwr)
pwr.f2.test(u = 4, f2 = .45/(1-.45), sig.level = 0.01, power = 0.8)
pwr.f2.test(u = 4, f2 = .3/(1-.3), sig.level = 0.01, power = 0.8)
pwr.f2.test(u = 4, f2 = .45/(1-.45), sig.level = 0.05, power = 0.8)
#Load Packages
library(tidyverse)
#Load Packages
library(tidyverse)
library(tidymodels)
library(caret)
library(janitor)
library(dplyr)
library(xtable)
library(knitr)
library(kableExtra)
library(knitr)
library(kableExtra)
library(iapsr) #our package, woohoo!
remove.packages("iapsr")
library(iapsr)
devtools::install_github("jdtrat/iapsr")
devtools::install_github("jdtrat/iapsr")
library(iapsr)
#Load Packages
library(tidyverse)
library(tidymodels)
library(caret)
library(fs)
library(vip)
library(janitor)
library(dplyr)
library(xtable)
library(knitr)
library(kableExtra)
library(iapsr) #our package, woohoo!
dirIAPS <- '~/Desktop/IAPS/IAPSdata/' #set the directory for IAPS data
dirData <- '~/Desktop/IAPS/Subject Data/' #set the directory for subject data
dirImageOrder <- '~/Desktop/IAPS/Subject Image Order/' #set the directory for image order
dirRatings <- '~/Desktop/IAPS/RJT/ratings/' #for new cohort
fileRatings <- dir_ls(dirRatings, glob = "*.txt.txt") #get the paths for the files that contain the string ".txt.txt". For new cohort.
filesIAPS <- dir_ls(dirIAPS) #list the files in the IAPS directory
filesData <- dir_ls(dirData) #list the files in the subject data directory
filesImageOrder <- dir_ls(dirImageOrder) #list the files in the image order directory
#Filter data for wanted demographic variables.
tidyDems2 <- Dems %>%
clean_names %>%
select(participant_id, gender, ethnicity, race_1:race_6, age, medication_history, psychiatric_condition, condition_description, smoke_current, alcohol_current, drugs_current) %>%
pivot_longer(cols = c(race_1:race_6), values_to = "race") %>%
rename(subject = participant_id) %>%
mutate(name = recode(name, race_1 = "asian", race_2 = "NHPI", race_3 = "AIAN", race_4 = "black", race_5 = "white", race_6 = "other"),
ethnicity = recode(ethnicity, "1" = "0", "2" = "1"),
gender = recode(gender, "1" = "0", "2" = "1"),
subject = str_replace(subject, "\\-", "\\_")) %>%
filter(race == "1" | subject == "SFA_1034" | subject == "SFA_1039" | subject == "SFA_1049" | subject == "SFA_1071") %>%
distinct (subject, race, .keep_all = TRUE)
tidyDems2 View() %>%
tidyDems2 %>% View()
dem.tab %>% View()
#Load Packages
library(tidyverse)
#Load Packages
library(tidyverse)
library(tidymodels)
library(caret)
library(fs)
library(vip)
library(janitor)
library(vip)
library(janitor)
library(dplyr)
library(xtable)
library(knitr)
library(kableExtra)
library(iapsr) #our package, woohoo!
dirIAPS <- '~/Desktop/IAPS/IAPSdata/' #set the directory for IAPS data
dirData <- '~/Desktop/IAPS/Subject Data/' #set the directory for subject data
dirImageOrder <- '~/Desktop/IAPS/Subject Image Order/' #set the directory for image order
dirRatings <- '~/Desktop/IAPS/RJT/ratings/' #for new cohort
fileRatings <- dir_ls(dirRatings, glob = "*.txt.txt") #get the paths for the files that contain the string ".txt.txt". For new cohort.
filesIAPS <- dir_ls(dirIAPS) #list the files in the IAPS directory
filesData <- dir_ls(dirData) #list the files in the subject data directory
filesImageOrder <- dir_ls(dirImageOrder) #list the files in the image order directory
#Import the IAPS key data set
keyIAPS <- filesIAPS %>%
map_df(~read_csv(.x, na = c("", ".", NA),
col_types = cols(IAPS = col_character())) %>%
select(desc:dom1sd) %>%
drop_na(),
.id = "form") %>%
mutate(form = case_when(str_detect(form, "1_IAPS") ~ 1,
str_detect(form, "2_IAPS") ~ 2,
str_detect(form, "3_IAPS") ~ 3,
str_detect(form, "4_IAPS") ~ 4),
form = as.factor(form))
#Read in subject rating
subjectData <- filesData %>%
map_df(~read_csv(.x) %>%
rename(time = Timestamp,
subject = `Subject ID:`),
.id = "form") %>%
mutate(form = case_when(str_detect(form, "1_SFA") ~ 1,
str_detect(form, "2_SFA") ~ 2,
str_detect(form, "3_SFA") ~ 3,
str_detect(form, "4_SFA") ~ 4),
form = as.factor(form)) %>%
#pivot the data so all ratings are in a column "rating" instead of in their own rows.
pivot_longer(cols = -c(form, time, subject), values_to = "rating") %>%
select(-name) %>%
#have a running order for each subject
group_by(subject) %>%
mutate(order = row_number()) %>%
ungroup() %>%
#make this subjectID string match that of imageOrder
mutate(subject = str_replace(subject, "\\-", "\\_")) %>%
select(-time) %>%
#arrange by each subject and the form (so one subject goes through all four
#forms before moving to next subject)
arrange(subject, form)
imageOrder <- filesImageOrder %>%
map_df(~read_csv(.x),
.id = "form") %>%
mutate(form = case_when(str_detect(form, "1_pictureID") ~ 1,
str_detect(form, "2_pictureID") ~ 2,
str_detect(form, "3_pictureID") ~ 3,
str_detect(form, "4_pictureID") ~ 4),
form = as.factor(form)) %>%
#pivot the data so all image values (IDs) are in a column "value"
pivot_longer(cols = -c(X1, form),
names_to = "subject") %>%
#remvoe subject prefix
mutate(subject = str_remove(.$subject, "\\d\\_")) %>%
#arrange by subject
arrange(subject) %>%
#remove NAs that appear because of how the data was read in where each form's
#image ID were basically in a new column for the subject with the prefix
#1_SFA_..."
drop_na() %>%
#have a running order for each subject, and remove the X1 column.
group_by(subject) %>%
mutate(order = row_number()) %>%
ungroup() %>%
select(-X1)
#read in demographics
demographics <- read_csv(file = "C:/Users/rachjone/Desktop/IAPS/Demographics/KLRIF_2018-07-09.csv")
#tidy the demographics data
tidyDems <- demographics %>%
rename(subject = "Subject ID",
age = "Age (years)",
gender = "What is your gender?") %>%
mutate(subject = str_replace(subject, "\\-", "\\_"),
gender = recode(gender, "Male" = 1, "Female" = 0)) %>%
select(subject, age, gender)
#join the imageOrder and subject data by subject, form, and order.
orderedSubjectData <- full_join(imageOrder, subjectData, by = c("form", "subject", "order")) %>%
rename(picID = value)
labeledOrderedSubjectData <- orderedSubjectData %>%
mutate(question = case_when(str_detect(picID, "P") ~ "positive",
str_detect(picID, "N") ~ "negative",
TRUE ~ "Oops"),
picID = str_remove_all(picID, "P|N")) %>%
rename(IAPS = picID)
positiveRatings <- labeledOrderedSubjectData %>%
filter(question == "positive") %>%
pivot_wider(names_from = question, values_from = rating)
negativeRatings <- labeledOrderedSubjectData %>%
filter(question == "negative") %>%
pivot_wider(names_from = question, values_from = rating)
#Read raw demographic data that includes 84 subjects.
Dems <-read_csv(file = "C:/Users/rachjone/Desktop/IAPS/SFA_demographics.csv")
#Tidy the data and filter to only display demographic variables of interest (age, gender, race, ethnicity, history of psychiatric condition and medications, and current drug, alcohol, and smoking use.)
tidyDems2 <- Dems %>%
clean_names %>%
select(participant_id, gender, ethnicity, race_1:race_6, age, medication_history, psychiatric_condition, condition_description, smoke_current, alcohol_current, drugs_current) %>%
pivot_longer(cols = c(race_1:race_6), values_to = "race") %>%
rename(subject = participant_id) %>%
mutate(name = recode(name, race_1 = "asian", race_2 = "NHPI", race_3 = "AIAN", race_4 = "black", race_5 = "white", race_6 = "other"),
ethnicity = recode(ethnicity, "1" = "0", "2" = "1"),
gender = recode(gender, "1" = "0", "2" = "1"),
subject = str_replace(subject, "\\-", "\\_")) %>%
filter(race == "1" | subject == "SFA_1034" | subject == "SFA_1039" | subject == "SFA_1049" | subject == "SFA_1071") %>%
distinct (subject, race, .keep_all = TRUE)
#Join table with the 47 subjects we used for our analyses. This gets rid of extra subjects we did not include for the old cohort (There were 84 total, and we only used 47 in our analyse).
finalData <- full_join(positiveRatings, negativeRatings, by = c("IAPS", "subject", "form")) %>%
select(-c(order.x, order.y)) %>%
full_join(keyIAPS, by = c("IAPS", "form")) %>%
full_join(tidyDems, by = "subject") %>%
drop_na() %>%
select(subject, age, gender,
form, IAPS, desc,
positive, negative, everything())
finalData2 <- finalData %>%
select(-c(age:dom1sd)) %>%
distinct()
DemJoin <- right_join(tidyDems2, finalData2, by = "subject")
DemJoin$gender <- as.numeric(DemJoin$gender)
DemJoin$ethnicity <- as.numeric(DemJoin$ethnicity)
#Create output table.
dem.tab <- DemJoin %>%
mutate(gender = recode(gender, "0" = "Female", "1" = "Male"),
ethnicity = recode(ethnicity, "0" = "Hispanic/Latino", "1" = "Not Hispanic/Latino"),
medication_history = recode(medication_history, "0" = "No", "1" = "Yes"),
psychiatric_condition = recode(psychiatric_condition, "0" = "No", "1" = "Yes"),
smoke_current = recode(smoke_current, "0" = "No", "1" = "Yes"),
alcohol_current = recode(alcohol_current, "0" = "No", "1" = "Yes"),
drugs_current = recode(drugs_current, "0" = "No", "1" = "Yes"),
name=ifelse(race == "0",NA,name)) %>%
select(-race) %>%
rename(race = name)
dem.tab %>% View()
finalData %>% View()
finalData2 %>% View()
dem.tab %>% View()
count(dem.tab$gender)
