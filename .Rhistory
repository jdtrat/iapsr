map_df(fileRatings, ~ tibble(path = .x, files = readRatings(.x))) %>%
select(files)
map_df(fileRatings, ~ tibble(path = .x, files = readRatings(.x))) %>%
select(files) %>%
unnest(files)
map_df(fileRatings, ~ tibble(path = .x, files = readRatings(.x))) %>%
select(files$data)
map_df(fileRatings, ~ tibble(path = .x, files = readRatings(.x) %>% select(.$data)))
readRatings(fileRatings[1])
readRatings(fileRatings[1]) %>% processRatingsData()
processRatingsData()
processRatingsData
getPicID
map_df(fileRatings, ~ tibble(path = .x, files = readRatings(.x)))
map_df(fileRatings, ~ tibble(path = .x, files = readRatings(.x))) %>%
mutate(subject = str_extract(path, "[:graph:]{9}(?=rating.txt)"))
map_df(fileRatings, ~ tibble(path = .x, files = readRatings(.x))) %>%
mutate(subject = str_extract(path, "[:graph:]{9}(?=rating.txt)")) %>% View()
map_df(fileRatings, ~ tibble(path = .x, files = readRatings(.x))) %>%
mutate(subject = str_extract(path, "[:graph:]{9}(?=rating.txt)")) %>% select(files.data) %>% View()
map_df(fileRatings, ~ tibble(path = .x, files = readRatings(.x))) %>%
mutate(subject = str_extract(path, "[:graph:]{9}(?=rating.txt)")) %>% select(files$data) %>% View()
map_df(fileRatings, ~ tibble(path = .x, files = readRatings(.x))) %>%
mutate(subject = str_extract(path, "[:graph:]{9}(?=rating.txt)")) %>% View()
map_dfr(fileRatings, ~ tibble(path = .x, files = readRatings(.x))) %>%
mutate(subject = str_extract(path, "[:graph:]{9}(?=rating.txt)")) %>% View()
map_dfr(fileRatings, ~ tibble(path = .x, files = readRatings(.x))) %>%
mutate(subject = str_extract(path, "[:graph:]{9}(?=rating.txt)"))
map_dfr(fileRatings, ~ tibble(path = .x, files = readRatings(.x))) %>%
mutate(subject = str_extract(path, "[:graph:]{9}(?=rating.txt)")) %>% str()
map_df(fileRatings, ~ tibble(path = .x, files = readRatings(.x))) %>%
mutate(subject = str_extract(path, "[:graph:]{9}(?=rating.txt)")) %>% str()
map(fileRatings, ~ tibble(path = .x, files = readRatings(.x))) %>%
mutate(subject = str_extract(path, "[:graph:]{9}(?=rating.txt)"))
map(fileRatings, ~ tibble(path = .x, files = readRatings(.x)))
map(fileRatings, ~ tibble(path = .x, files = readRatings(.x))) %>%
map_df(.$files, ~processRatingsData)
map(fileRatings, ~ tibble(path = .x, files = readRatings(.x))) %>%
map_df(.$files, ~processRatingsData(.x))
map(fileRatings, ~ tibble(path = .x, files = readRatings(.x)))
map(fileRatings, ~ tibble(path = .x, files = readRatings(.x))) %>%
map_df(~processRatingsData(.x))
processRatingsData()
fileRatings[1] %>% processRatingsData()
fileRatings[1] %>% readRatings() %>% processRatingsData()
map(fileRatings, ~ tibble(path = .x, files = readRatings(.x))) %>%
nest(files)
map(fileRatings, ~ tibble(path = .x, files = readRatings(.x)))
map_df(fileRatings, ~ tibble(path = .x, files = readRatings(.x))) %>%
nest(files)
map_df(fileRatings, ~ tibble(path = .x, files = readRatings(.x))) %>%
nest(files) %>%
mutate(data = map_df(~processRatingsData(.x)))
map_df(fileRatings, ~ tibble(path = .x, files = readRatings(.x))) %>%
nest(files) %>%
mutate(data = map_df(data, ~processRatingsData(.x)))
map_df(fileRatings, ~ tibble(path = .x, files = readRatings(.x))) %>%
nest(files)
map_df(fileRatings, ~ tibble(path = .x, files = readRatings(.x))) %>%
nest(files) %>% View()
View(.[[2]][[1]])
map_df(fileRatings, ~ tibble(path = .x, files = readRatings(.x))) %>%
nest(files) %>% unnest(data) %>% View()
map_df(fileRatings, ~readRatings(.x))
map(fileRatings, ~readRatings(.x)) %>%
map_df(~processRatingsData(.x), .id = "subject")
map(fileRatings, ~readRatings(.x)) %>%
map_df(~processRatingsData(.x), .id = "subject") %>% View()
map(fileRatings, ~readRatings(.x)) %>%
map_df(~processRatingsData(.x), .id = "subject") %>% count(subject)
map(fileRatings, ~readRatings(.x)) %>%
map_df(~processRatingsData(.x), .id = "subject") %>%
mutate(subject = str_extract(subject, "[:graph:]{9}(?=rating.txt)"))
map(fileRatings, ~readRatings(.x)) %>%
map_df(~processRatingsData(.x), .id = "subject") %>%
mutate(subject = str_extract(subject, "[:graph:]{9}(?=rating.txt)")) %>% count(subject)
map(fileRatings, ~readRatings(.x))
map(fileRatings, ~readRatings(.x), .id = "SUUB")
xznd <- map(fileRatings, ~readRatings(.x), .id = "SUUB")
xznd
?mapply(function, ...)
?map
map_df(fileRatings, ~readRatings(.x), .id = "SUUB")
map_df(fileRatings, ~readRatings(.x), .id = "SUUB") %>% count(SUUB)
subjectRatings <-
map(fileRatings, ~readRatings(.x)) %>%
map_df(~processRatingsData(.x), .id = "subject") %>%
mutate(subject = str_extract(subject, "[:graph:]{9}(?=rating.txt)"))
subjectRatings
newCohortRatings <-
map(fileRatings, ~readRatings(.x)) %>%
map_df(~processRatingsData(.x), .id = "subject") %>%
mutate(subject = str_extract(subject, "[:graph:]{9}(?=rating.txt)"))
readr::read_file('~/Desktop/IAPS/RJT/demographics/IAPSdems.xlsx')
readr::read_csv('~/Desktop/IAPS/RJT/demographics/IAPSdems.xlsx')
newCohortDems <- read_csv('~/Desktop/IAPS/RJT/demographics/IAPSdems.csv')
newCohortDems
left_join(newCohortRatings, newCohortDems)
left_join(newCohortRatings, newCohortDems) %>% regSetup()
newCohortRatings
newCohortRatings %>% regSetup()
newCohortRatings %>%
dplyr::filter(question == "positive") %>%
tidyr::pivot_wider(names_from = question,
values_from = rating)
posCohort <- newCohortRatings %>%
dplyr::filter(question == "positive") %>%
tidyr::pivot_wider(names_from = question,
values_from = rating)
negCohort <- newCohortRatings %>%
dplyr::filter(question == "negative") %>%
tidyr::pivot_wider(names_from = question,
values_from = rating)
full_join(negCohort, posCohort)
full_join(negCohort, posCohort, by = c("picture", "subject"))
full_join(negCohort, posCohort, by = c("picture"))
left(negCohort, posCohort, by = c("picture"))
left_join(negCohort, posCohort, by = c("picture"))
left_join(negCohort, posCohort, by = c("picture")) %>%
rename(subject = subject.x) %>%
select(-c(subject.y, round.x, round.y))
left_join(negCohort, posCohort, by = c("picture")) %>%
rename(subject = subject.y) %>%
select(-c(subject.y, round.x, round.y))
left_join(negCohort, posCohort, by = c("picture")) %>%
rename(subject = subject.y) %>%
select(-c(subject.x, round.x, round.y))
left_join(negCohort, posCohort, by = c("picture")) %>%
rename(subject = subject.y) %>%
select(-c(subject.x, round.x, round.y)) %>%
arrange(subject)
left_join(negCohort, posCohort, by = c("picture")) %>%
rename(subject = subject.y) %>%
select(-c(subject.x, round.x, round.y)) %>%
arrange(subject) %>%
relocate(subject, .before = picture)
left_join(negCohort, posCohort, by = c("picture")) %>%
rename(subject = subject.y) %>%
select(-c(subject.x, round.x, round.y)) %>%
arrange(subject) %>%
relocate(subject, .before = picture) %>% View()
newCohortRatings
newCohortDems
newCohortRatings %>% regSetup()
newCohortRatings
newCohortRatings %>% arrange(picture)
left_join(negCohort, posCohort, by = c("picture")) %>%
rename(subject = subject.y) %>%
select(-c(subject.x, round.x, round.y)) %>%
arrange(subject) %>%
relocate(subject, .before = picture) %>% arrange(picture) %>% View()
newCohortRatings %>% arrange(picture) %>% head(50)
newCohortRatings %>% arrange(picture) %>% as.data.frame() %>% head(50)
newCohortRatings
posCohort
posCohort
negCohort
full_join(posCohort, negCohort, by = c("subject", "picture"))
newCohortRatings %>% filter(subject == "IAPS_B_01") %>% View()
full_join(posCohort, negCohort, by = c("subject", "picture")) %>% arrange(picture)
full_join(posCohort, negCohort, by = c("subject", "picture")) %>% arrange(subject, picture)
full_join(posCohort, negCohort, by = c("subject", "picture")) %>% arrange(subject, picture) %>% select(-c(round.x, round.y))
full_join(posCohort, negCohort, by = c("subject", "picture")) %>% arrange(subject, picture) %>% select(-c(round.x, round.y)) %>% tail()
full_join(posCohort, negCohort, by = c("subject", "picture")) %>% arrange(subject, picture) %>% select(-c(round.x, round.y)) %>% tail(10)
newCohortRatings %>% filter(subject == "IAPS_B_05") %>% View()
posCohort <- newCohortRatings %>%
dplyr::filter(question == "positive") %>%
tidyr::pivot_wider(names_from = question,
values_from = rating)
left_join(newCohortRatings, newCohortDems) %>%
full_join(posCohort, negCohort, by = c("subject", "picture")) %>%
arrange(subject, picture) %>%
select(-c(round.x, round.y))
left_join(newCohortRatings, newCohortDems) %>%
full_join(posCohort, negCohort, by = c("subject", "picture"))
left_join(newCohortRatings, newCohortDems) %>%
full_join(posCohort, negCohort, by = c("subject", "picture")) %>%
arrange(subject, picture) %>%
select(-c(round.x, round.y))
devtools::load_all()
left_join(newCohortRatings, newCohortDems) %>% regSetup()
newCohortRatings %>% regSetup()
processRatingsData(rawDataRating)
processRatingsData(rawDataRating) %>% regSetup()
newCohortRatings %>% regSetup() %>% count(subject)
newCohortRatings %>% regSetup()
newCohortRatings %>% regSetup() %>% tail(10)
newCohortRatings %>% regSetup() %>% arrange(subject, picture) %>% tail(10)
newCohortRatings %>% regSetup() %>% arrange(subject, IAPS) %>% tail(10)
newCohortRatings %>% filter(subject == "IAPS_B_01") %>% View()
newCohortRatings %>% regSetup() %>% arrange(subject, IAPS)
newCohortRatings %>%
regSetup() %>%
left_join(newCohortDems)
newCohortRatings %>%
regSetup() %>%
left_join(newCohortDems) %>% count(subject, age, gender)
newCohortRatings %>%
regSetup() %>%
left_join(newCohortDems) %>%
left_join(keyIAPS)
newCohortRatings %>%
regSetup() %>%
left_join(newCohortDems) %>%
left_join(keyIAPS)
newCohortRatings %>%
regSetup() %>%
left_join(newCohortDems) %>%
left_join(keyIAPS) %>% count(subject)
?recode
#Read in and manipulate the new cohort demographics information.
newCohortDems <- read_csv('~/Desktop/IAPS/RJT/demographics/IAPSdems.csv') %>%
mutate(gender = recode(gender, `1` = "female"))
newCohortDems
#Read in and manipulate the new cohort demographics information.
newCohortDems <- read_csv('~/Desktop/IAPS/RJT/demographics/IAPSdems.csv') %>%
mutate(gender = recode(gender,"female" = `1`))
#Read in and manipulate the new cohort demographics information.
newCohortDems <- read_csv('~/Desktop/IAPS/RJT/demographics/IAPSdems.csv') %>%
mutate(gender = recode(`1` = "female"))
#Read in and manipulate the new cohort demographics information.
newCohortDems <- read_csv('~/Desktop/IAPS/RJT/demographics/IAPSdems.csv') %>%
recode("female" = `1`))
#Read in and manipulate the new cohort demographics information.
newCohortDems <- read_csv('~/Desktop/IAPS/RJT/demographics/IAPSdems.csv') %>%
recode("female" = `1`)
#Read in and manipulate the new cohort demographics information.
newCohortDems <- read_csv('~/Desktop/IAPS/RJT/demographics/IAPSdems.csv') %>%
mutate(gender = recode("female" = `1`))
#Read in and manipulate the new cohort demographics information.
newCohortDems <- read_csv('~/Desktop/IAPS/RJT/demographics/IAPSdems.csv') %>%
mutate(gender = recode(`1` = "female"))
#Read in and manipulate the new cohort demographics information.
newCohortDems <- read_csv('~/Desktop/IAPS/RJT/demographics/IAPSdems.csv') %>%
mutate(gender = case_when(gender == "female" ~ 0,
gender == "male" ~ 1))
newCohortDems
# Create the final data to perform regressions by setting up the new cohort
# ratings data using the iapsr regSetup function, joining that with the new
# cohort demographics information by subject, and joining that by the IAPS
# ratings key.
newCohortFinalData <- newCohortRatings %>%
regSetup() %>%
left_join(newCohortDems, by = "subject") %>%
left_join(keyIAPS, by = "IAPS")
#preview the regression data frame for subject IAPS_B_01
head(newCohortFinalData, 10)
#Read in and manipulate the new cohort data.
newCohortRatings <-
#Read in all the ratings data into a list with each element corresponding to a
#different file.
map(fileRatings, ~readRatings(.x)) %>%
#take each list element (subject file) and call our function
#processRatingsData, creating an ID column called "subject". This column
#simply contains the file path string name.
map_df(~processRatingsData(.x), .id = "subject") %>%
#extract from the subject column the IDs. For example "IAPS_B_01".
mutate(subject = str_extract(subject, "[:graph:]{9}(?=rating.txt)"))
#Read in and manipulate the new cohort demographics information.
newCohortDems <- read_csv('~/Desktop/IAPS/RJT/demographics/IAPSdems.csv') %>%
mutate(gender = case_when(gender == "female" ~ 0,
gender == "male" ~ 1))
# Create the final data to perform regressions by setting up the new cohort
# ratings data using the iapsr regSetup function, joining that with the new
# cohort demographics information by subject, and joining that by the IAPS
# ratings key.
newCohortFinalData <- newCohortRatings %>%
regSetup() %>%
left_join(newCohortDems, by = "subject") %>%
left_join(keyIAPS, by = "IAPS")
?top_n
fileRatings
map(fileRatings, ~readRatings(.x))
newCohortRatings <-
#Read in all the ratings data into a list with each element corresponding to a
#different file.
map(fileRatings, ~readRatings(.x))
newCohortRatings
newCohortRatings$`/Users/jt/Desktop/IAPS/RJT/ratings/IAPS_B_03rating.txt.txt`
newCohortRatings <-
#Read in all the ratings data into a list with each element corresponding to a
#different file.
map(fileRatings, ~readRatings(.x)) %>%
#take each list element (subject file) and call our function
#processRatingsData, creating an ID column called "subject". This column
#simply contains the file path string name.
map_df(~processRatingsData(.x), .id = "subject")
newCohortRatings
#Read in and manipulate the new cohort data.
newCohortRatings <-
#Read in all the ratings data into a list with each element corresponding to a
#different file.
map(fileRatings, ~readRatings(.x)) %>%
#take each list element (subject file) and call our function
#processRatingsData, creating an ID column called "subject". This column
#simply contains the file path string name.
map_df(~processRatingsData(.x), .id = "subject") %>%
#extract from the subject column the IDs. For example "IAPS_B_01".
mutate(subject = str_extract(subject, "[:graph:]{9}(?=rating.txt)"))
newCohortRatings
newCohortRatings %>% count(subject)
newCohortDems
newCohortRatings
newCohortRatings %>% regSetup()
newCohortRatings %>%
regSetup() %>%
left_join(newCohortDems, by = "subject")
# Create the final data to perform regressions by setting up the new cohort
# ratings data using the iapsr regSetup function, joining that with the new
# cohort demographics information by subject, and joining that by the IAPS
# ratings key.
newCohortFinalData <- newCohortRatings %>%
regSetup() %>%
left_join(newCohortDems, by = "subject") %>%
left_join(keyIAPS, by = "IAPS")
newCohortFinalData
fileRatings
readRatings(fileRatings[1])
readRatings(fileRatings[3])
map(fileRatings, ~readRatings(.x))
#Read in and manipulate the new cohort data.
newCohortRatings <-
#Read in all the ratings data into a list with each element corresponding to a
#different file.
map(fileRatings, ~readRatings(.x)) %>%
#take each list element (subject file) and call our function
#processRatingsData, creating an ID column called "subject". This column
#simply contains the file path string name.
map_df(~processRatingsData(.x), .id = "subject") %>%
#extract from the subject column the IDs. For example "IAPS_B_01".
mutate(subject = str_extract(subject, "[:graph:]{9}(?=rating.txt)"))
#Read in and manipulate the new cohort demographics information.
newCohortDems <- read_csv('~/Desktop/IAPS/RJT/demographics/IAPSdems.csv') %>%
mutate(gender = case_when(gender == "female" ~ 0,
gender == "male" ~ 1))
# Create the final data to perform regressions by setting up the new cohort
# ratings data using the iapsr regSetup function, joining that with the new
# cohort demographics information by subject, and joining that by the IAPS
# ratings key.
newCohortFinalData <- newCohortRatings %>%
regSetup() %>%
left_join(newCohortDems, by = "subject") %>%
left_join(keyIAPS, by = "IAPS")
newCohortFinalData %>% group_by(subject) %>% nest()
newCohortFinalData %>%
group_by(subject) %>%
nest() %>%
mutate(valModel = map(data, ~lm(valmn ~ positive + negative + (positive * negative) + gender + age, data = .x)))
newCohortFinalData %>%
group_by(subject) %>%
nest() %>%
mutate(valModel = map(data, ~lm(valmn ~ positive + negative + (positive * negative) + gender + age, data = .x)),
predictions = map_2(valModel, data, ~predict(.x, .y)))
newCohortFinalData %>%
group_by(subject) %>%
nest() %>%
mutate(valModel = map(data, ~lm(valmn ~ positive + negative + (positive * negative) + gender + age, data = .x)),
predictions = map_2(valModel, data, ~augment(.x, .y)))
newCohortFinalData %>%
group_by(subject) %>%
nest() %>%
mutate(valModel = map(data, ~lm(valmn ~ positive + negative + (positive * negative) + gender + age, data = .x)),
predictions = map(valModel, ~augment(.x)))
newCohortFinalData %>%
group_by(subject) %>%
nest() %>%
mutate(valModel = map(data, ~lm(valmn ~ positive + negative + (positive * negative) + gender + age, data = .x)),
augmented = map(valModel, ~augment(.x)))
newCohortFinalData %>%
group_by(subject) %>%
nest() %>%
mutate(valModel = map(data, ~lm(valmn ~ positive + negative + (positive * negative) + gender + age, data = .x)),
augmented = map(valModel, ~augment(.x))) %>%
unnest(augmented)
nrow(newCohortFinalData)
newCohortFinalData %>%
group_by(subject) %>%
nest() %>%
mutate(valModel = map(data, ~lm(valmn ~ positive + negative + (positive * negative) + gender + age, data = .x)),
augmented = map(valModel, ~augment(.x))) %>%
unnest(augmented) %>%
ggplot(aes(x = .rownames, y = valmn)) +
geom_point() +
geom_line(aes(y = .fitted, color = subject))
newCohortFinalData %>%
group_by(subject) %>%
nest() %>%
mutate(valModel = map(data, ~lm(valmn ~ positive + negative + (positive * negative) + gender + age, data = .x)),
augmented = map(valModel, ~augment(.x))) %>%
unnest(augmented) %>%
arrange(subject, valmn) %>%
mutate(row = row_number())
ggplot(aes(x = row, y = valmn)) +
geom_point() +
geom_line(aes(y = .fitted, color = subject))
newCohortFinalData %>%
group_by(subject) %>%
nest() %>%
mutate(valModel = map(data, ~lm(valmn ~ positive + negative + (positive * negative) + gender + age, data = .x)),
augmented = map(valModel, ~augment(.x))) %>%
unnest(augmented) %>%
arrange(subject, valmn) %>%
mutate(row = row_number()) %>%
ggplot(aes(x = row, y = valmn)) +
geom_point() +
geom_line(aes(y = .fitted, color = subject))
newCohortFinalData %>%
group_by(subject) %>%
nest() %>%
mutate(valModel = map(data, ~lm(valmn ~ positive + negative + (positive * negative) + gender + age, data = .x)),
augmented = map(valModel, ~augment(.x))) %>%
unnest(augmented) %>%
arrange(subject, valmn) %>%
mutate(row = row_number()) %>%
ggplot(aes(x = row, y = valmn)) +
geom_point() +
geom_line(aes(y = .fitted, color = subject)) +
facet_wrap(~.fitted)
newCohortFinalData %>%
group_by(subject) %>%
nest() %>%
mutate(valModel = map(data, ~lm(valmn ~ positive + negative + (positive * negative) + gender + age, data = .x)),
augmented = map(valModel, ~augment(.x))) %>%
unnest(augmented) %>%
arrange(subject, valmn) %>%
mutate(row = row_number()) %>%
ggplot(aes(x = row, y = valmn)) +
geom_point() +
geom_line(aes(y = .fitted, color = subject)) +
facet_wrap(~subject)
newCohortFinalData %>%
group_by(subject) %>%
nest() %>%
mutate(valModel = map(data, ~lm(valmn ~ positive + negative + (positive * negative) + gender + age, data = .x)),
augmented = map(valModel, ~augment(.x))) %>%
unnest(augmented) %>%
arrange(subject, valmn) %>%
mutate(row = row_number()) %>% View()
newCohortFinalData %>%
group_by(subject) %>%
nest() %>%
mutate(valModel = map(data, ~lm(valmn ~ positive + negative + (positive * negative) + gender + age, data = .x)),
augmented = map(valModel, ~augment(.x))) %>%
unnest(augmented) %>%
arrange(subject, valmn) %>%
group_by(subject) %>%
mutate(row = row_number()) %>%
ungroup() %>%
ggplot(aes(x = row, y = valmn)) +
geom_point() +
geom_line(aes(y = .fitted, color = subject)) +
facet_wrap(~subject)
newCohortFinalData %>%
group_by(subject) %>%
nest() %>%
mutate(valModel = map(data, ~lm(valmn ~ positive + negative + (positive * negative) + gender + age, data = .x)),
augmented = map(valModel, ~augment(.x)),
metrics = map(valModel, ~glance(.x)))
newCohortFinalData %>%
group_by(subject) %>%
nest() %>%
mutate(valModel = map(data, ~lm(valmn ~ positive + negative + (positive * negative) + gender + age, data = .x)),
augmented = map(valModel, ~augment(.x)),
metrics = map(valModel, ~glance(.x))) %>%
unnest(metrics)
newCohortFinalData %>%
group_by(subject) %>%
nest() %>%
mutate(valModel = map(data, ~lm(valmn ~ positive + negative + (positive * negative) + gender + age, data = .x)),
augmented = map(valModel, ~augment(.x)),
metrics = map(valModel, ~glance(.x))) %>%
unnest(augmented) %>%
arrange(subject, valmn) %>%
group_by(subject) %>%
mutate(row = row_number()) %>%
ungroup() %>%
ggplot(aes(x = row, y = valmn)) +
geom_point() +
geom_line(aes(y = .fitted, color = subject)) +
facet_wrap(~subject)
newCohortFinalData %>%
group_by(subject) %>%
nest() %>%
mutate(valModel = map(data, ~lm(valmn ~ positive + negative + (positive * negative) + gender + age, data = .x)),
augmented = map(valModel, ~augment(.x)),
metrics = map(valModel, ~glance(.x))) %>%
unnest(augmented) %>%
arrange(subject, valmn) %>%
group_by(subject) %>%
mutate(row = row_number()) %>%
ungroup() %>%
ggplot(aes(x = row, y = valmn)) +
geom_point() +
geom_line(aes(y = .fitted, color = subject)) #+
newCohortFinalData %>%
group_by(subject) %>%
nest() %>%
mutate(valModel = map(data, ~lm(valmn ~ positive + negative + (positive * negative) + gender + age, data = .x, .id = "model")),
augmented = map(valModel, ~augment(.x)),
metrics = map(valModel, ~glance(.x)))
?control_resamples
library(tidyverse)
library(tidymodels)
library(fs)
library(tictoc)
library(vip)
library(caret)
library(iapsr) #our package, woohoo!
remove.packages("iapsr")
remove.packages("iapsr")
library(iapsr)
devtools::install_github("jdtrat/iapsr")
